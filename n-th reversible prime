When no more interesting kata can be resolved, I just choose to create the new kata, to solve their own, to enjoy the process --myjinxin2015 said

Description:
What's a reversible prime? That is: A prime, reverse all the digits, get a new number. If the new number is also a prime, then it is a reversible prime .

We can get a sequence of reversible prime:

 n(start from 0)  --> 0 1 2 3 4  5  6  7  8  .....
 reversible prime --> 2 3 5 7 11 13 17 31 37 .....
Task
Complete function reversiblePrime. Function accept argument n(a integer, 0 <= n <= 10000). Returns the n-th reversible prime.

Some examples:
reversiblePrime(0) === 2

reversiblePrime(1) === 3 

reversiblePrime(5) === 13 

reversiblePrime(10) === 73 

reversiblePrime(20) === 167 

reversiblePrime(100) === 1669 





function reversiblePrime(n){
  var forPrime = []

  function prime(n){
    for(var i=2;i<=parseInt(Math.sqrt(n));i++){
      if(n % i == 0) return false
    }
  return true
  }

  for(var i=2;forPrime.length <= n;i++){
    if(prime(i) && prime(i.toFixed(0).split("").reverse().join("")-0)) forPrime.push(i)
  }
  return forPrime[n]
}



Tests used:

describe('reversiblePrime', function(){
  it('returns primes that when reversed are still primes',function(){
    expect(reversiblePrime(5)).toEqual(13)
    expect(reversiblePrime(10)).toEqual(73)
    expect(reversiblePrime(20)).toEqual(167)
    expect(reversiblePrime(100)).toEqual(1669)
    })
  })
