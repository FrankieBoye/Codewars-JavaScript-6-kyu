Take an input string and return a string that is made up of the number of occurences of each english letter in the input followed by that letter, sorted alphabetically. The output string shouldn't contain chars missing from input (chars with 0 occurence); leave them out.

An empty string, or one with no letters, should return an empty string.

Notes:

the input will always be valid;
treat letters as case-insensitive

Examples
"This is a test sentence."  ==>  "1a1c4e1h2i2n4s4t"
""                          ==>  ""
"555"                       ==>  ""





function string_letter_count(s) {
  s = s.toLowerCase().split("").sort().join("").replace(/[^a-zA-Z]+/gi,"")
  var result = ""
  var count = 1
    for(var i=0;i<s.length;i++){
      if(s[i]==s[i+1]){
        count ++
      } else {
        result += count + s[i]
        count = 1
      }
    }
  return result
}



Tests used:

describe('string_letter_count', function(){
  it('encodes strings',function(){
    expect(string_letter_count("This is a test sentence.")).toEqual("1a1c4e1h2i2n4s4t")
    expect(string_letter_count("")).toEqual("")
    expect(string_letter_count("555")).toEqual("")
    expect(string_letter_count("The time you enjoy wasting is not wasted time.")).toEqual("2a1d5e1g1h4i1j2m3n3o3s6t1u2w2y")
    expect(string_letter_count("./4592#{}()")).toEqual("")
    expect(string_letter_count("./4592#{}()")).toEqual("")
    expect(string_letter_count("The quick brown fox jumps over the lazy dog.")).toEqual("1a1b1c1d3e1f1g2h1i1j1k1l1m1n4o1p1q2r1s2t2u1v1w1x1y1z")
    })
  })
